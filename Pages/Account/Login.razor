@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inherits OwningComponentBase<AccountService>
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvier

<div class="card">
    <h4 class="card-header">@Test</h4>
    <div class="card-body" >
        <EditForm Model="@model">
            <DataAnnotationsValidator />
            
            
            <div class="form-group">
                <label>User ID</label>
                <input @bind="model.userid" class="form-control" placeholder="2"/>
                <ValidationMessage For="@(() => model.userid)" />
            </div>
            
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="model.password" type="password" class="form-control" />
                <ValidationMessage For="@(() => model.password)" />
            </div>
            <button @onclick="LoginManager" class="btn btn-primary">
                @if (loading) 
                {
                    <span class="spinner-border spinner-border-sm mr-1"></span>
                }
                Login
            </button>
            <NavLink href="/account/register" class="btn btn-link">Register</NavLink>
        </EditForm>
    </div>
</div>

@code {
    string Test = "Login";
    
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask {get; set;}
    private Models.Login model = new Models.Login();
    private bool loading = false;
    private async Task LoginManager()
    {
        var authenticationState = await authenticationStateTask;
        var user = authenticationState.User;
        if (user.Identity.IsAuthenticated)
        {
            Test = "CORRECT";
        }
        else
        {
            Test = "Error.";
        }
    }
}
