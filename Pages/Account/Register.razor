@page "/account/register"
@inherits OwningComponentBase<AccountService>
@inject NavigationManager NavigationManager
@using Sakuri.Data
@inject IToastService toastService
@using Sakuri.Services
@using System.Security.Cryptography
@using Sakuri.Models
@using Sakuri

<div class="card">
    <h4 class="card-header">Register</h4>
    <div class="card-body">
        <div class="form-group">
                <label>Account ID</label>
                <p><b>@AccountID</b>
                <button type="submit" class="btn btn-primary" style="float:right;" @onclick="GenerateAccountNumber">
                    Refresh
                </button>
                </p>
            </div>
        <EditForm Model="@model" OnValidSubmit=@CreateUser>
            <DataAnnotationsValidator />
            
            <div class="form-group">
                <label>Password</label>
                <InputText @bind-Value="model.password" type="password" class="form-control" />
                <ValidationMessage For="@(() => model.password)" />
            </div>
            <button type="submit" class="btn btn-primary" @onclick="@(() => toastService.ShowSuccess("Account Created!"))">
                Register
            </button>
            <NavLink href="/" class="btn btn-link">Cancel</NavLink>
        </EditForm>
    </div>
</div>

@code {
    long AccountID;
    IList<Sakuri.Users>? aclist;
    Users userObj = new Users();
    private void GenerateAccountNumber()
    {
        var bytes = new byte[sizeof(Int64)];
        RNGCryptoServiceProvider Gen = new RNGCryptoServiceProvider();
        Gen.GetBytes(bytes);

        long random = BitConverter.ToInt64(bytes, 0);

        //Remove any possible negative generator numbers and shorten the generated number to 12-digits
        string pos = random.ToString().Replace('-', ' ').Substring(0, 12);
        AccountID = Convert.ToInt64(pos);
    }
    private AddUser model = new AddUser();
    private bool loading = false;

    protected override void OnInitialized()
    {
        GenerateAccountNumber();
        base.OnInitialized();
        aclist = Service.GetAllUsers();
    }
    
    void CreateUser()
    {
        userObj.userid = AccountID;
        Service.InsertInfo(userObj);
        NavigationManager.NavigateTo("/");
    }
}
