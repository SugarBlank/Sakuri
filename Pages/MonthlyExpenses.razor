@page "/monthlyexpenses"
@inject IModalService modal  
@using Sakuri.Data
@inject MoneyInformationService MoneyService
<div class="top-row pl-0 navbar navbar-dark">
    <h1>Monthly Expenses</h1>
    <button @onclick="@ShowModal" class="btn-primary btn button-add" style="float:right; margin-bottom:10px">Add product</button>
</div>

<p>Expenses for this month:</p>


@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Category</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.Summary</td>
                    <td>$@forecast.Price</td>
                </tr>
            }
            @foreach (var price in forecasts)
            {
                totalCost = totalCost + @price.Price;
            }
            <a class = "price" style="position:relative; left:170%; top: 35px;">Total Cost: <b>$@totalCost</b></a>
            
        </tbody>
    </table>
}

@code {
    [CascadingParameter] public IModalService Modal { get; set; }
    private MoneyInformation[] forecasts;
    int totalCost;
    void ShowModal()
    {
        var options = new ModalOptions()
        {
            HideCloseButton = true,
            Animation = ModalAnimation.FadeInOut(.25)
        };

        Modal.Show<AddProduct>("Products", options);
    }
    protected override async Task OnInitializedAsync()
    {
        forecasts = await MoneyService.GetMoneyAsync(DateTime.Now);
    }
}
